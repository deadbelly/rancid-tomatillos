{"version":3,"sources":["components/Header.js","components/Poster.js","changeList.js","components/MovieList.js","components/MovieDetail.js","components/Error.js","fetchRequests.js","components/MovieDetailContainer.js","components/Loader.js","components/App.js","index.js"],"names":["Header","searchQuery","updateQuery","sort","updateSort","className","src","alt","to","type","placeholder","aria-label","value","onChange","event","target","htmlFor","name","Poster","id","title","rating","imgSrc","toFixed","length","changeList","filterMovies","movies","filter","movie","toLowerCase","search","includes","sortBy","average_rating","a","b","release_date","map","parseInt","split","join","localeCompare","sensitivity","MovieList","poster_path","MovieDetail","videos","date","Date","toDateString","genres","opts","height","width","tabIndex","backdrop_path","tagline","overview","runtime","Intl","NumberFormat","format","budget","revenue","video","videoId","key","Error","status","text","fetchRequests","checkResponse","response","ok","json","getAllMovies","fetch","then","getSelectedMovie","getVideos","MovieDetailContainer","state","selectedDetails","error","this","props","match","params","trackPromise","Promise","all","data","setState","catch","statusText","React","Component","Loader","loading","usePromiseTracker","promiseInProgress","color","size","App","searchBarValue","sortValue","exact","path","render","component","router","basename","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.179b15d7.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Header = ({searchQuery, updateQuery, sort, updateSort}) => {\n  return (\n    <header>\n      <h1>Rancid\n        <img className='icon' src='./tomatillo.png' alt='green tomato icon'/>\n        Tomatillos\n      </h1>\n      <Link to='/'>\n        <button>HOME</button>\n      </Link>\n      <form>\n        <input\n          type='text'\n          placeholder='Search Movies By Title'\n          aria-label='Search Movies By Title'\n          value={searchQuery}\n          onChange={ event => updateQuery(event.target.value) }\n        />\n        <div className='sort'>\n          <label htmlFor='sort-options'>Sort movies by </label>\n          <select name='sort-options' value={sort} onChange={event => updateSort(event.target.value)}>\n            <option value='average_rating'>Freshness</option>\n            <option value='release_date'>Date</option>\n            <option value='title'>Title</option>\n          </select>\n        </div>\n      </form>\n    </header>\n  );\n}\n\nexport default Header;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Poster = ({id, title, rating, imgSrc}) => {\n  return (\n    <Link  className='poster' to={`/${id}`}>\n      <img className=\"poster-img\" src={imgSrc} alt={title}/>\n      <div>\n        <p>Freshness: {rating.toFixed(2)*10}%</p>\n        <h2 className={title.length > 25 ? 'long-title' : ''}>{title}</h2>\n      </div>\n    </Link>\n  );\n}\n\nexport default Poster;\n","const changeList = {\n  filterMovies(movies, searchQuery) {\n    return movies.filter(movie => {\n      const title = movie.title.toLowerCase();\n      const search = searchQuery.toLowerCase();\n      return title.includes(search);\n    });\n  },\n\n  sortBy: {\n    average_rating(movies) {\n      return movies.sort((a, b) => b.average_rating - a.average_rating);\n    },\n\n    release_date(movies) {\n      const convertedDates = movies.map(movie => {\n        if (typeof(movie.release_date) === 'string') {\n          movie.release_date = parseInt(movie.release_date.split('-').join(''));\n        }\n        return movie\n      });\n\n      return convertedDates.sort((a, b) => {\n        return b.release_date - a.release_date\n      });\n    },\n\n    title(movies) {\n      return movies.sort((a, b) => {\n        return a.title.localeCompare(b.title, {sensitivity: 'base'});\n      });\n    }\n  }\n}\n\nexport default changeList;\n","import React from 'react';\nimport Poster from './Poster';\nimport changeList from '../changeList';\n\nconst MovieList = ({movies, searchQuery, sort}) => {\n\n  movies = changeList.filterMovies(movies, searchQuery);\n  movies = changeList.sortBy[sort](movies);\n\n  return (\n    <div className='poster-grid'>\n      {movies.map(movie =>\n        <Poster\n          key={movie.id}\n          id={movie.id}\n          title={movie.title}\n          rating={movie.average_rating}\n          imgSrc={movie.poster_path}\n        />)}\n    </div>\n  );\n}\n\nexport default MovieList;\n","import React from 'react';\nimport YouTube from 'react-youtube';\n\nconst MovieDetail = ({movie, videos}) => {\n  const date = new Date(movie.release_date).toDateString();\n\n  const genres = movie.genres.join(' ');\n\n  const opts = {\n    height: '350',\n    width: '390',\n  }\n\n  return (\n    <section>\n      <article className='movie-spec movie-container' tabIndex='0'>\n        <h2 className={movie.title.length >= 20 ? 'long-movie-title' : 'movie-title'}>{movie.title}</h2>\n        <img className='backdrop-img' src={movie.backdrop_path} alt={`${movie.title} promo still`}/>\n        <h3>{movie.tagline}</h3>\n        <p className='overview'>{movie.overview}</p>\n      </article>\n      <article className='movie-info movie-container' tabIndex='0'>\n        <h2>Stats</h2>\n        <div className='movie-stats'>\n          <p><b>Freshness:</b> {movie.average_rating.toFixed(2)*10}%</p>\n          <p><b>Release Date:</b> {date}</p>\n          <p><b>Genres:</b> {genres}</p>\n          <p><b>Runtime:</b> {movie.runtime} minutes</p>\n          <p><b>Budget:</b> ${new Intl.NumberFormat().format(movie.budget)}</p>\n          <p><b>Revenue:</b> ${new Intl.NumberFormat().format(movie.revenue)}</p>\n        </div>\n        <h2>Trailers & Clips</h2>\n        <div className='trailer-container movie-container' tabIndex='0'>\n          {videos.length &&\n            videos.map(video => <YouTube videoId={video.key} opts={opts} key={video.id}/> )}\n        </div>\n      </article>\n    </section>\n  );\n}\n\nexport default MovieDetail;\n","import React from 'react';\n\n\nconst Error = ({status, text}) => {\n  return (\n    <>\n      <h1 className='error-status'>{status} - {text}</h1>\n      <p className='error-expl'>{status === 404 && 'What you\\'re looking for isn\\'t here. Double Check the url and try again.'}\n      {status >= 500 && status < 600 && 'Something went wrong on our end. Try reloading the page. If the problem persists try back later.'}</p>\n    </>\n  );\n}\n\nexport default Error;\n","const fetchRequests = {\n  checkResponse(response) {\n    if (response.ok) {\n      return response.json();\n    }\n    throw response;\n  },\n\n  getAllMovies() {\n    return fetch('https://rancid-tomatillos.herokuapp.com/api/v2/movies')\n      .then(response => this.checkResponse(response));\n  },\n\n  getSelectedMovie(id) {\n    return fetch(`https://rancid-tomatillos.herokuapp.com/api/v2/movies/${id}`)\n      .then(response => this.checkResponse(response));\n  },\n\n  getVideos(id) {\n    return fetch(`https://rancid-tomatillos.herokuapp.com/api/v2//movies/${id}/videos`)\n      .then(response => this.checkResponse(response));\n  }\n}\n\nexport default fetchRequests;\n","import React from 'react';\nimport MovieDetail from './MovieDetail';\nimport Error from './Error';\nimport fetchRequests from '../fetchRequests';\nimport { trackPromise } from 'react-promise-tracker';\n\nclass MovieDetailContainer extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      selectedDetails: null,\n      videos: [],\n      error: null,\n    }\n  }\n\n  componentDidMount() {\n   const {id} = this.props.match.params\n    trackPromise(\n      Promise.all([fetchRequests.getSelectedMovie(id), fetchRequests.getVideos(id)])\n       .then(data => {\n        this.setState({selectedDetails: data[0].movie})\n        this.setState({videos: data[1].videos})\n       })\n       .catch(error => this.setState({error: error}))\n    );\n  }\n\n  render() {\n    return (\n    <>\n      {this.state.error && <Error status={this.state.error.status} text={this.state.error.statusText}/>}\n      {this.state.selectedDetails && <MovieDetail movie={this.state.selectedDetails} videos={this.state.videos}/>}\n    </>\n    );\n  }\n}\n \nexport default MovieDetailContainer;\n","import React from 'react';\nimport { usePromiseTracker } from \"react-promise-tracker\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\n\nconst Loader = () => {\n\n  return (\n    <div>\n      <ClipLoader loading={usePromiseTracker().promiseInProgress} color={'#BFDF8E'} size={'40vh'} />\n    </div>\n  );\n}\n\nexport default Loader;\n","import React from 'react';\nimport Header from './Header';\nimport MovieList from './MovieList';\nimport MovieDetailContainer from './MovieDetailContainer';\nimport Loader from './Loader';\nimport Error from './Error';\nimport fetchRequests from '../fetchRequests';\nimport { trackPromise } from 'react-promise-tracker';\nimport { Route } from 'react-router-dom';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      movies: [],\n      error: null,\n      searchQuery: '',\n      sort: 'average_rating'\n    }\n  }\n\n  componentDidMount() {\n    trackPromise(fetchRequests.getAllMovies()\n      .then(data => this.setState({movies: data.movies, selectedDetails: null}))\n      .catch(error => this.setState({error: error}))\n    );\n  }\n\n  updateQuery = (searchBarValue) => {\n    this.setState({searchQuery: searchBarValue});\n  }\n\n  updateSort = (sortValue) => {\n    this.setState({sort: sortValue});\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Header\n          searchQuery={this.state.searchQuery}\n          updateQuery={this.updateQuery}\n          sort={this.state.sort}\n          updateSort={this.updateSort}\n        />\n        <main>\n          <Loader />\n          {this.state.error && <Error status={this.state.error.status} text={this.state.error.statusText}/>}\n          {!!this.state.movies.length &&\n            <Route exact path='/rancid-tomatillos/' render={ () =>\n              <MovieList\n                movies={this.state.movies}\n                searchQuery={this.state.searchQuery}\n                sort={this.state.sort}\n              />}\n            />\n          }\n          <Route path='/rancid-tomatillos/:id' component={ MovieDetailContainer } />\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport { HashRouter } from 'react-router-dom';\nimport './scss/index.scss';\n\nconst router = <HashRouter basename='/'> <App /> </HashRouter>;\n\nReactDOM.render(router, document.getElementById('root'));\n"],"sourceRoot":""}